/* Wallisches Produkt */

#include <stdio.h>
#include <stdlib.h>

double epsilon;
double ai;
double ai_mineins;


double potenz(int basis, int exponent){
  int i, sum;
  sum = 1;
  
  for (i=0;i<exponent;i++){
    sum *= basis;
  }

  printf("Potenz: %d\n",sum);
  return sum;
}

double absolut(double value){
  if (value < 0){
    return value *= -1;
  }
  else{
    return value;
  }
  printf ("Value: %f\n", value);
}

float piWallisHelp (double ai_mineins, double i, double epsilon){
  ai = ai_mineins * (1+(1/(4*potenz(i,2)-1)));

  if (absolut(ai_mineins - ai) > epsilon){
    return piWallisHelp(ai, i-1, epsilon);
  }
  else{
    return 2*ai;
  }
}

float piWallis (double epsilon){
  return piWallisHelp(1,1,epsilon);
}

int main (void){
  epsilon = 0.0001;
  printf ("Ergebnis: %f\n",piWallis(epsilon));

  return 0;
}
